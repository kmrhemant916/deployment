---
# tasks file for aws.ec2-instance-create

- name: Create EC2 security group
  ec2_group:
    name: "{{ item.ec2_prefix }}-security-group"
    description: "{{ item.ec2_prefix }} security group"
    region: "{{ aws_region }}"
    rules: "{{ item.inbound_security_rules }}"
    vpc_id: "{{ vpc_id }}"
    rules_egress: "{{ item.outbound_security_rules }}"
  with_items: "{{ ec2_instances }}"
  register: security_group
  tags:
    - security_group

- debug: msg="{{ item.group_id }}"
  with_items: "{{ security_group.results }}"
  tags:
    - security_group

- name: Create EC2 instance
  ec2:
    key_name: "{{ ssh_key_name }}"
    region: "{{ aws_region }}"
    group_id: "{{ item.sg_id }}"
    instance_type: "{{ item.instance_type }}"
    image: "{{ item.aws_ami }}"
    wait: yes
    count_tag:
      Name: "{{ item.ec2_prefix }}"
    instance_tags:
      Name: "{{ item.ec2_prefix }}"
    exact_count: "{{ item.instance_count }}"
    vpc_subnet_id: "{{ vpc_subnet_id }}"
    assign_public_ip: "{{ item.assign_public_ip }}"
  with_items: "{{ ec2_instances }}"
  register: ec2
  tags:
    - ec2

# - debug: msg="{{ ec2 }}"
#   tags:
#     - ec2

- debug: msg="Public IP for EC2 is {{ ec2.results[0].tagged_instances[0].public_ip }}"
  tags:
    - ec2

# Ansible in-memory inventory, check DevOps_Handbook notes
- name: Add instance IP to group
  local_action:
    module: add_host
    hostname: "{{ item.item.ec2_prefix }}"
    name: "{{ item.tagged_instances[0].public_ip }}"
    groupname: managed-hosts
    ansible_ssh_host: "{{ item.tagged_instances[0].public_ip }}"
  with_items: "{{ ec2.results }}"
  tags:
    - ec2
  when: ec2.results[0].tagged_instances

- name: Wait for port 22 to be ready
  hosts: managed-hosts
  gather_facts: False

  tasks:
    - local_action: wait_for port=22 host="{{ ansible_ssh_host }}" search_regex=OpenSSH delay=60
