---
# tasks file for aws.vpc-network-create

- name: create VPC
  ec2_vpc_net:
    name: "{{ outer_item.vpc_name }}"
    cidr_block: "{{ outer_item.cidr_block }}"
    region: "{{ outer_item.region }}"
    state: "present"
  register: vpc
  tags:
    - vpc
    - igw
    - subnets
    - route_table

- name: set VPC ID in variable
  set_fact: 
    vpc_id: "{{ vpc.vpc.id }}"
  tags:
    - vpc
    - igw
    - subnets
    - route_table

- debug: msg="{{ vpc_id }}"
  tags:
    - vpc
    - igw
    - subnets
    - route_table

- name: create igw for VPC - "{{ vpc_id }}"
  ec2_vpc_igw:
    vpc_id: "{{ vpc_id }}"
    region: "{{ outer_item.region }}"
    state: "present"
    resource_tags:
      Name: "{{ outer_item.igw_name }}"
  register: igw
  tags:
    - igw

- name: set IGW ID in variable
  set_fact: 
    igw_id: "{{ igw.gateway_id }}"
  tags:
    - igw

- debug: msg="{{ igw_id }}"
  tags:
    - igw

- name: create subnet into VPC - {{ vpc_id }}
  ec2_vpc_subnet:
    state: present
    vpc_id: "{{ vpc_id }}"
    region: "{{ outer_item.region }}"
    cidr: "{{ item.cidr }}"
    map_public: "{{ item.public }}"
    az: "{{ item.az }}"
    resource_tags:
      Name: "{{ item.name }}"
  with_items: "{{ outer_item.subnets }}"
  register: subnet
  tags:
    - subnets

# Give the output in json format for debugging to fetch the subnet_id
# - debug: msg="{{ subnet }}"
#   tags:
#     - subnets

- debug: msg="{{ item.subnet.id }}"
  with_items: "{{ subnet.results }}" #results is an array check by uncommenting task line no 69
  tags:
    - subnets

# Equivalent to line no 74-77 
# - debug: msg="{{ subnet.results[0].subnet.id }}"
#   tags:
#     - subnets

# - debug: msg="{{ subnet.results[1].subnet.id }}"
#   tags:
#     - subnets

- name: Create route table
  ec2_vpc_route_table:
    vpc_id: "{{ vpc_id }}"
    region: "{{ outer_item.region }}"
    subnets: "{{ item.name }}"
    routes: "{{ item.routes }}"
    resource_tags:
      Name: "{{ item.name }}"
  with_items: "{{ outer_item.subnets }}"
  register: route_table
  tags:
    - route_table

- name: Create NAT Gateway in public subnet
  ec2_vpc_nat_gateway:
    state: "present"
    subnet_id: "{{ subnet_id }}"
    wait: yes
    if_exist_do_not_create: true
    release_eip: true
  register: nat_gateway
  tags:
    - nat_gateway

- name: set NAT GW ID in variable
  set_fact: 
    nat_id: "{{ nat_gateway.nat_gateway_id }}"
  tags:
    - nat_gateway

- debug: msg="{{ nat_id }}"
  tags:
    - nat_gateway